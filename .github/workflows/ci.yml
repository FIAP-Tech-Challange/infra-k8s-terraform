name: 'Infrastructure CI/CD'

on:
  push:
    branches:
      - main

jobs:
  bootstrap:
    name: 'Bootstrap Infrastructure'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Run Bootstrap Script
        run: |
          chmod +x .github/workflows/bootstrap.sh
          .github/workflows/bootstrap.sh \
            --bucket="${{ secrets.TERRAFORM_STATE_BUCKET }}" \
            --region="${{ secrets.AWS_REGION }}"

  terraform:
    name: 'Infrastructure Plan/Apply'
    runs-on: ubuntu-latest
    needs: bootstrap

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}" \
            -backend-config="region=${{ secrets.AWS_REGION }}"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: |
          terraform plan -no-color \
            -var="aws_region=${{ secrets.AWS_REGION }}"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          terraform apply -auto-approve \
            -var="aws_region=${{ secrets.AWS_REGION }}"